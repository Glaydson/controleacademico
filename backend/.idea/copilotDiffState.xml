<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/../.gitignore">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/../.gitignore" />
              <option name="updatedContent" value="# Global ignores for the entire controleacademico project&#10;&#10;# IDE and system files&#10;.idea/&#10;*.iml&#10;.DS_Store&#10;&#10;# Node.js (frontend)&#10;node_modules/&#10;dist/&#10;build/&#10;.env&#10;.env.local&#10;.env.development.local&#10;.env.test.local&#10;.env.production.local&#10;&#10;# npm logs&#10;npm-debug.log*&#10;yarn-debug.log*&#10;yarn-error.log*&#10;&#10;# Quarkus/Java (backend)&#10;target/&#10;*.log&#10;*.class&#10;*.jar&#10;*.war&#10;*.ear&#10;&#10;# Maven&#10;.mvn/&#10;&#10;# VSCode&#10;.vscode/&#10;&#10;# Misc&#10;.shelf/&#10;workspace.xml&#10;httpRequests/&#10;dataSources/&#10;dataSources.local.xml&#10;&#10;# OS generated files&#10;Thumbs.db&#10;&#10;# Ignore coverage and test output&#10;coverage/&#10;&#10;# Ignore frontend build artifacts&#10;frontend/.next/&#10;frontend/.nuxt/&#10;frontend/.cache/&#10;&#10;# Ignore backend build artifacts&#10;backend/academico-backend/target/&#10;backend/academico-backend/.quarkus/&#10;&#10;# Ignore frontend and backend specific files&#10;frontend/.env*&#10;backend/academico-backend/.env*&#10;&#10;# Ignore import.sql if not needed&#10;backend/academico-backend/src/main/resources/import.sql&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/academico-backend/src/main/java/com/glaydson/controleacademico/rest/AuthHeaderLoggingFilter.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/academico-backend/src/main/java/com/glaydson/controleacademico/rest/AuthHeaderLoggingFilter.java" />
              <option name="updatedContent" value="package com.glaydson.controleacademico.rest;&#10;&#10;import jakarta.ws.rs.container.ContainerRequestContext;&#10;import jakarta.ws.rs.container.ContainerRequestFilter;&#10;import jakarta.ws.rs.ext.Provider;&#10;import org.jboss.logging.Logger;&#10;&#10;@Provider&#10;public class AuthHeaderLoggingFilter implements ContainerRequestFilter {&#10;    private static final Logger LOG = Logger.getLogger(AuthHeaderLoggingFilter.class);&#10;&#10;    @Override&#10;    public void filter(ContainerRequestContext requestContext) {&#10;        String authHeader = requestContext.getHeaderString(&quot;Authorization&quot;);&#10;        if (authHeader != null) {&#10;            LOG.info(&quot;Authorization header: &quot; + authHeader);&#10;        } else {&#10;            LOG.info(&quot;No Authorization header present in request.&quot;);&#10;        }&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>